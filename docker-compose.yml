version: "1"

services:

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    networks:
      - database
    volumes:
      - postgres:/data/postgres

  pgADmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
    ports:
      - 5050:80
    networks:
      - database
    volumes:
      - pgadmin:/var/lib/pgadmin

  minios3:
    image: quay.io/minio/minio
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    networks:
      - s3
    command: server --console-address ":9001" /data/
    volumes:
      - ./Docker/minio/:/data

  mlflow:
    image: mlflow_server
    restart: always
    ports:
      - 5000:5000
    environment:
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
      MLFLOW_S3_ENDPOINT_URL: http://minios3:9000
    networks:
      - s3
      - database
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB_NAME} --artifacts-destination s3://${BUCKET_NAME}/mlartifacts --serve-artifacts --host 0.0.0.0


networks:
  database:
    driver: bridge
  s3:
    driver: bridge

volumes:
  postgres:
  pgadmin:


